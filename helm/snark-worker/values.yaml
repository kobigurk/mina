testnetName: "coda-testnet"
coda:
  runtimeConfig:
  generateGenesisProof: true
  enableArchive: false
  archiveAddress: archive-1:3086
  genesis:
    active: true
    k: 10
    delta: 3
    txpool_max_size: 3000
    genesis_state_timestamp: "2020-04-20 11:00:00-07:00"
  image: codaprotocol/coda-daemon:0.0.16-beta7-develop
  useCustomEntrypoint: false
  customEntrypoint: ""
  seedPeers:
    - /ip4/35.185.66.37/tcp/10105/p2p/12D3KooWQ7Pz3SPizarzx9ZhCJ6jNmQ2iDPgHQxVzRzqYU2SgRSd
    - /ip4/35.237.214.144/tcp/10120/p2p/12D3KooWGtjWnCcvkaSEbKuNbPivEogxqtLWcsJiQtURydptvrsA
  ports:
    client: "8301"
    graphql: "3085"
    metrics: "10001"
    p2p: "10909"
  exposeGraphql: false
  logTxnPoolGossip: false

# worker:
  # remoteCoordinatorHost: "{{ tpl $.Values.coordinator.fullname . }}.{{ $.Values.testnetName }}"
  # remoteCoordinatorPort: 8301

snarkSetConfigs:
  - coordinatorName: "" #"snark-coordinator-{{ trunc -6 .Values.coordinator.publicKey | lower }}"
    workerName: "" #"snark-worker-{{ trunc -6 .Values.coordinator.publicKey | lower }}"
    workerReplicas: 1
    coordinatorHostName: "" # "{{ tpl $.Values.coordinator.fullname . }}.{{ $.Values.testnetName }}"
    coordinatorRpcPort: 8301
    coordinatorHostPort: 10001
    publicKey: "" #"4vsRCVadXwWMSGA9q81reJRX3BZ5ZKRtgZU7PtGsNq11w2V9tUNf4urZAGncZLUiP4SfWqur7AZsyhJKD41Ke7rJJ8yDibL41ePBeATLUnwNtMTojPDeiBfvTfgHzbAVFktD65vzxMNCvvAJ"
    snarkFee: "0.025"
    workSelectionAlgorithm: seq # seq OR rand

healthcheck:
  enabled: true
  failureThreshold: 60
  periodSeconds: 5
  initialDelaySeconds: 30

nodeSelector:
  preemptible: true
